# NGINX Configuration for VVG World
# Based on Jack's video instructions for legal.vtc.systems/vvg_world
# Place this file at: /etc/nginx/sites-enabled/default

server {
    # Listen on port 80 (HTTP)
    listen 80;
    listen [::]:80;
    
    # Server name - domain without trailing slash (as per Jack's instructions)
    server_name legal.vtc.systems;
    
    # Increase buffer sizes for Microsoft authentication
    # This prevents authentication failures when scaling beyond 5 users
    proxy_buffer_size 16k;
    proxy_buffers 8 16k;
    proxy_busy_buffers_size 32k;
    large_client_header_buffers 4 16k;
    
    # Client body settings
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    
    # Location block for VVG World application
    location /vvg_world {
        # Proxy to Node.js application on localhost:3000
        proxy_pass http://localhost:3000;
        
        # Proxy headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Proxy timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Disable proxy cache for dynamic content
        proxy_cache_bypass $http_upgrade;
        
        # Handle trailing slashes
        proxy_redirect off;
    }
    
    # Root location redirect to NDA analyzer
    location = / {
        return 301 /vvg_world;
    }
    
    # API routes specifically for NDA analyzer
    location /api {
        proxy_pass http://localhost:3000;
        
        # Same proxy headers as above
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }
    
    # Static files and Next.js assets
    location /_next/static {
        proxy_pass http://localhost:3000;
        
        # Cache static assets
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://localhost:3000;
        access_log off;
    }
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
}

# HTTPS Configuration (to be added after SSL certificate installation)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     
#     server_name legal.vtc.systems;
#     
#     # SSL Certificate paths (update after Let's Encrypt installation)
#     ssl_certificate /etc/letsencrypt/live/legal.vtc.systems/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/legal.vtc.systems/privkey.pem;
#     
#     # SSL Configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # Same location blocks as HTTP version above
#     # (Copy all location blocks from HTTP server block)
# }

# HTTP to HTTPS redirect (enable after SSL is configured)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name legal.vtc.systems;
#     return 301 https://$server_name$request_uri;
# }